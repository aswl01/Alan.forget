#Setting Proxy For Ubuntu 16.04 LTS
配置环境

#/.bashrc
export http_proxy=http://username:password@proxy_server:proxy_port/


配置apt 代理

#/etc/apt/apt.conf.d/30proxy
Acquire::http::Proxy "http://username:password@proxy_server:proxy_port/";


#Setting Proxy For Wget
#You can set the default proxies for Wget to use for http, https, and ftp.
# They will override the value in the environment.
vim /etc/wgetrc
https_proxy = http://127.0.0.1:8087/
http_proxy = http://127.0.0.1:8087/
ftp_proxy = http://127.0.0.1:8087/

# If you do not want to use proxy at all, set this to off.
use_proxy = on

#Download Chrome on Ubuntu
# 将下载源加入系统源列表
sudo wget http://www.linuxidc.com/files/repo/google-chrome.list -P /etc/apt/sources.list.d/
# 导入谷歌软件公钥
wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
# 更新源
sudo apt-get update
# 安装chrome
sudo apt-get install google-chrome-stable

# run this line in terminal
/usr/bin/google-chrome-stable

# setting proxy for chrome in command line
cd /usr/share/applications
sudo vim google-chrome.desktop
add --proxy-server="IP:port" in EXEC line

# install bazel
# 1. Add Bazel distribution URI as a package source (one time setup)
echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -

# 2. Install and update Bazel
sudo apt-get update && sudo apt-get install bazel
# Once installed, you can upgrade to a newer version of Bazel with:
sudo apt-get upgrade bazel




# Ubuntu install JDK
Download JDK
sudo mkdir /usr/local/java
sudo tar -zxvf jdk-8u131-linux-x64.tar.gz -C /usr/local/java
sudo apt-get install vim

vim /etc/profile
  # set java environment
  export JAVA_HOME=/usr/local/java/jdk1.8.0.131
  export JRE_HOME=${JAVA_HOME}/jre
  export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
  export PATH=${JAVA_HOME}/bin:$PATH
source /etc/profile
sudo update-alternatives --install /usr/bin/java java /usr/local/java/jdk1.8.0_131/bin/java 300
sudo update-alternatives --install /usr/bin/javac javac /usr/local/java/jdk1.8.0_131/bin/javac 300

# Ubuntu install Mysql
sudo apt-get install mysql-server
sudo apt install mysql-client
sudo apt install libmysqlclient-dev

# checking 
sudo netstat -tap | grep mysql

# setting remote access
sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf
# comment out bind-address = 127.0.0.1： 
mysql> grant all on *.* to root@'%' identified by 'root' with grant option;
mysql> flush privileges;

####################################################3
# if connection error-> shut down firewall
/sbin/iptables -I INPUT -p tcp --dport 3306 -j ACCEPT
/etc/rc.d/init.d/iptables save

# github 本地创建SSH key，然后将生成的SSH key文件内容添加到github帐号上去。
ssh-keygen
cat ~/.ssh/id_rsa.pub

# Ubuntu install tomcat
# Download the newest Tomcat from  http://tomcat.apache.org/download-90.cgi
tar -zxvf apache-tomcat-9.0.0.M22.tar.gz 
sudo cp -r apache-tomcat-9.0.0.M22 /opt
cd /opt/apache-tomcat-9.0.0.M22/
sudo vim ./bin/startup.sh

# append this
	JAVA_HOME=/usr/local/java/jdk1.8.0.131
	JRE_HOME=$JAVA_HOME/jre
	PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME
	CLASSPATH=.:$JRE_HOME/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
	TOMCAT_HOME=/opt/apache-tomcat-9.0.0.M22

# Tomcat startup
sudo ./bin/startup.sh

# Tomcat shutdown
sudo ./bin/shutdown.sh

# Ubuntu install Hue Hadoop
# INstalling Pre-Requisite Stuff
sudo apt-get install git ant gcc g++ libffi-dev libkrb5-dev libmysqlclient-dev libsasl2-dev libsasl2-modules-gssapi-mit libsqlite3-dev libssl-dev libxml2-dev libxslt-dev make maven libldap2-dev python-dev python-setuptools libgmp3-dev

Oracle's JDK

sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java7-installer
mvn (from maven package or maven3 tarball)
openldap-dev / libldap2-dev
libtidy-0.99-0 (for unit tests only)

# start install Hue
sudo apt-get install git
cd ~/Download
git clone https://github.com/cloudera/hue.git
cd hue
sudo make apps
sudo ./build/env/bin/hue runserver
# Now visit http://127.0.0.1:8000 to hue 4

# Ubuntu install redis
Download newest redis from https://redis.io/download

tar -zxvf redis-4.0.0.tar.gz 
cd redis-4.0.0/
ll
make
sudo make PREFIX=/usr/local/redis install

# 在/usr/local/redis/bin 下有几个可执行文件
redis-benchmark		----性能测试工具
redis-check-rdb  	----RDB文件检查工具（快照持久化文件）
redis-sentinel		
redis-check-aof  	----AOF文件修复工具
redis-cli        	----命令行客户端
redis-server		----redis服务器启动命令

# 最后
cd ~/Downloads/
cd redis-4.0.0/
sudo cp redis.conf /usr/local/redis/

## port number
# mysql 3306
# redis 6379
# tomcat 8080

# ./bin/redis-cli 默认连接本地的6379端口
# 可以使用一下命令 连接外网
./bin/redis-cli -h 127.0.0.1 -p 6379

# 设置后端启动的方式
vim /usr/local/redis/redis.conf
# set daemonize to yes
./bin/redis-server ./redis.conf 
ps -ef | grep -i redis
# 可以启动集群
# 如果出现can't save 错误 无法正常关闭server 是因为permission 问题
# sudo chmod 777 -R bin/
# sudo chmod 666 redis.conf

# linux 自动挂载
sudo vim /etc/fstab 
/dev/硬盘名称	/挂载点	ext4	defaults	0	0
